{"version":3,"sources":["Home.js","Constants.js","Directions.js","FilmsWatched.js","App.js","reportWebVitals.js","index.js"],"names":["Home","_ref","onClick","react_default","a","createElement","className","TMBD_API_KEY","Directions","setFilmDataObj","_useState","useState","_useState2","Object","slicedToArray","userData","setUserData","_useState3","_useState4","queriesCompleted","setQueriesCompleted","_useState5","_useState6","currMovieData","setCurrMovieData","_useState7","_useState8","currMovieID","setCurrMovieID","_useState9","_useState10","setLoading","_useState11","_useState12","setError","useEffect","i","length","movieJSON","movieSearch","Name","Year","movieDetails","updateCurrentMovie","title","year","fetch","concat","myConstClass","then","res","json","result","console","log","results","id","error","type","accept","onChange","event","Papa","parse","target","files","header","skipEmptyLines","complete","results2022","data","filter","movie","Date","slice","FilmsWatched","filmDataObj","App","pageIndex","setPageIndex","src_Home","src_Directions","src_FilmsWatched","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b1e1b423.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\n\nfunction Home({onClick}) {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>\n          Are you a Letterboxd user <br/> with an undying need <br/> to quantify your love for film? <br/> \n          </p>\n          <button className = \"button\" onClick = {onClick}> Absolutely. </button>\n        </header>\n      </div>\n    );\n  }\n\nexport default Home; // \"export default\" keywords specify the main component of the file","// constants to keep safe\nexport const TMBD_API_KEY = 'df1e67f460086cadab34f9c9bee0f3d6'\n","import './App.css';\nimport React, { useEffect } from 'react';\nimport Papa from 'papaparse';\nimport { useState } from 'react';\nimport * as myConstClass from './Constants.js';\n\nfunction Directions({onClick, setFilmDataObj}) {\n  const [userData,setUserData] = useState(null)\n\n  // for querying movie data\n  const [queriesCompleted,setQueriesCompleted] = useState(false)\n\n  const [currMovieData, setCurrMovieData] = useState(null);\n  const [currMovieID, setCurrMovieID] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(()=> { // using the useEffect hook since there are side effects\n    if (userData != null){ // if there's data to process\n      for (let i=0; i<userData.length; i++){\n        // for each movie\n        let movieJSON = userData[i];\n        movieSearch(movieJSON.Name,movieJSON.Year);\n        movieDetails(currMovieID);\n        updateCurrentMovie(currMovieData);\n      }\n      setQueriesCompleted(true)\n    }\n  });\n\n  const updateCurrentMovie = (currMovieData) => {\n    // need to make a method that updates the userData in space without mutation \n  }\n\n  const movieSearch = (title,year) => {\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=${myConstClass.TMBD_API_KEY}&query=${title}&page=1&include_adult=true&year=${year}`)\n    .then(res => res.json())\n    .then(\n      (result) => {\n        console.log(result)\n        setCurrMovieID(result.results.id);\n      },\n      // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      (error) => {\n        setLoading(false);\n        setError(error);\n      }\n    )\n  }\n\n  const movieDetails = (id) => {\n    fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${myConstClass.TMBD_API_KEY}&language=en-US`)\n    .then(res => res.json())\n    .then(\n      (result) => {\n        console.log(result)\n        setCurrMovieData(result.results);\n      },\n      // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      (error) => {\n        setLoading(false);\n        setError(error);\n      }\n    )\n  }\n\n  const fileHandler = (event) => {\n    // from: https://medium.com/how-to-react/how-to-parse-or-read-csv-files-in-reactjs-81e8ee4870b0\n    // Passing file data (event.target.files[0]) to parse using Papa.parse\n\n    Papa.parse(event.target.files[0], {\n      header: true,\n      skipEmptyLines: true,\n      complete: function (results) {\n        // only using 2022 results\n        let resultData = results.data; // result data from all years\n        // result data from 2022 - array of jsons format\n        let results2022 = resultData.filter(movie => {return movie.Date.slice(0,4) === '2022';}); \n        console.log(results2022)\n        setUserData(results2022);\n\n        // querying needed data for each result object\n        if (queriesCompleted == true){\n          setFilmDataObj(results2022);\n          setLoading(false)\n        }\n        \n      },\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Directions For Use\n        </p>\n        <div className='App-body'>\n          <p>\n          1. Log in to your account. <br/>\n          2. Navigate to https://letterboxd.com/settings/ <br/>\n          3. Click “Import & Export” <br/>\n          4. Upload the .zip file below \n          </p>\n        </div>\n        <input type=\"file\" \n           id=\"csvFile\" \n            accept=\".csv\"\n            onChange={fileHandler} />\n        <br/>\n        <button className = \"button\" onClick = {onClick}> Next </button>\n      </header>\n    </div>\n  );\n}\n \nexport default Directions; // \"export default\" keywords specify the main component of the file","import './FilmsWatched.css';\nimport { useState } from 'react';\nimport React from 'react';\nimport Papa from 'papaparse';\n\nfunction FilmsWatched({onClick,filmDataObj}) {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p> {`In 2022, you watched`} </p>\n          <br/>\n          <h1> {`${filmDataObj.length} films`} </h1>\n        </header>\n      </div>\n    );\n  }\n\nexport default FilmsWatched; // \"export default\" keywords specify the main component of the file","import React from 'react';\nimport { useState } from 'react';\n\n// pages\nimport Home from './Home';\nimport Directions from './Directions';\nimport FilmsWatched from './FilmsWatched';\n\nfunction App() {\n  // note: a state variable’s value never changes within a render. be careful.\n  // remember to avoid direct mutations to object -> replace them w new ones so the frame rerenders\n  // TREAT STATE AS IMMUTABLE!\n  const [pageIndex, setPageIndex] = useState(0);\n  const [filmDataObj, setFilmDataObj] = useState(null)\n\n  if (pageIndex === 0){\n    return (\n      <Home onClick={() => setPageIndex(1)}/>\n    );\n  } else if (pageIndex === 1){\n    return (\n      <Directions onClick={() => setPageIndex(2)}\n                  setFilmDataObj={setFilmDataObj} />\n    );\n  } else if (pageIndex === 2){\n    return (\n      <FilmsWatched onClick={() => setPageIndex(3)}\n              filmDataObj = {filmDataObj}\n      />\n    );\n  }\n}\n\nexport default App; // \"export default\" keywords specify the main component of the file","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}