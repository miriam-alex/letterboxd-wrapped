{"version":3,"sources":["Home.js","Constants.js","Secret.js","Loading.js","Directions.js","FilmsWatched.js","Error.js","MinutesWatched.js","TopGenres.js","App.js","reportWebVitals.js","index.js"],"names":["Home","_ref","onClick","react_default","a","createElement","className","YEAR","TMBD_API_KEY","Loading","genreList","colorList","_useState","useState","Math","floor","random","_useState2","Object","slicedToArray","genre","setGenre","_useState3","_useState4","color","setColor","useEffect","interval","setInterval","clearInterval","style","concat","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Directions","setPageIndex","setFilmDataObj","userData","setUserData","allQueriesCompleted","setAllQueriesCompleted","_useState5","_useState6","loading","setLoading","_useState7","_useState8","setError","fetchData","console","log","_ref2","asyncToGenerator","_callee","userDataCopy","movieJSON","movieID","movieData","filteredUserDataCopy","_context","JSON","parse","stringify","movieSearch","Name","Year","movieDetails","updateCurrentMovie","filter","movie","apply","arguments","currMovieData","index","Runtime","runtime","Genres","genres","_unused","_ref3","_callee2","title","year","_context2","fetch","Secret","res","json","results","id","_x","_x2","_ref4","_callee3","_context3","_x3","src_Loading","class","accept","onChange","event","Papa","target","files","header","skipEmptyLines","resultsInPeriod","data","Date","Constants","FilmsWatched","filmDataObj","MinutesWatched","minutesData","setMinutesData","totalMinutes","toLocaleString","TopGenres","genreData","setGenreData","genreDataObj","j","currGenre","genreDataArray","entries","sort","b","App","pageIndex","src_Home","src_Directions","src_FilmsWatched","src_MinutesWatched","src_TopGenres","src_Error","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.bcdcc9fb.chunk.js","sourcesContent":["import './css/App.css';\nimport React from 'react';\n\nfunction Home({onClick}) {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>\n          Are you a Letterboxd user <br/> with an undying need <br/> to quantify your love for film? <br/> \n          </p>\n          <button className = \"button\" onClick = {onClick}> Absolutely. </button>\n          <p className='App-bottom'>This product uses the TMDB API but is not endorsed or certified by TMDB.</p>\n        </header>\n      </div>\n    );\n  }\n\nexport default Home; // \"export default\" keywords specify the main component of the file","// constants for testing\nexport const YEAR = \"2022\"\n","export const TMBD_API_KEY = 'df1e67f460086cadab34f9c9bee0f3d6'\n","import './css/FilmsWatched.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nfunction Loading() {\n    let genreList = ['Romcoms','Detective Films','Anime','Dramas','YA Dystopias','Cats: The Musical','Terrible Horror Films','Oscar Bait','Your Mom','Theater']\n    let colorList = ['#FF68A8', '#64CFF7', '#F7E752', '#CA7CD8', '#3968CB', '#E3826F', '#E4A9A4', '#EFBA97', '#F1CCBB', '#E7D5C7']\n    const [genre,setGenre] = useState(genreList[Math.floor(Math.random() * 10)]);\n    const [color,setColor] = useState(colorList[Math.floor(Math.random() * 10)]);\n    \n    useEffect(() => {\n      const interval = setInterval(() => {\n        setGenre(genreList[Math.floor(Math.random() * 10)]);\n        setColor(colorList[Math.floor(Math.random() * 10)]);\n      }, 1600);\n      return () => clearInterval(interval);\n    }, []);\n\n\n    // {`color: #${color}`\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p> Loading <span style ={{color: `${color}`}} >{`${genre}`}</span>... </p>\n        </header>\n      </div>\n    );\n  }\n\nexport default Loading; // \"export default\" keywords specify the main component of the file","import './css/App.css';\nimport React, { useEffect } from 'react';\nimport Papa from 'papaparse';\nimport { useState } from 'react';\nimport * as Constants from './Constants.js';\nimport * as Secret from './Secret';\nimport Loading from './Loading';\n\nfunction Directions({setPageIndex, setFilmDataObj}) {\n  const [userData,setUserData] = useState(null);\n\n  // for querying movie data\n  const [allQueriesCompleted,setAllQueriesCompleted] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(()=> { // should only trigger upon upload -> state change!\n    if (userData != null && allQueriesCompleted === false){ // if there's data to process\n      fetchData()\n      setLoading(true)\n    } else if (allQueriesCompleted === true && loading === true){\n      console.log(\"all queries completed. final user data below\")\n      console.log(userData)\n      setFilmDataObj(userData);\n      setLoading(false)\n      setPageIndex(2)\n    } else if (error != null) {\n      setPageIndex('error')\n    }\n  });\n  \n  const fetchData = async function() {\n    let userDataCopy = JSON.parse(JSON.stringify(userData));\n    for (let i=0; i<userData.length; i++){\n      console.log(`looking @ movie ${i}`);\n\n      let movieJSON = userData[i];\n      let movieID = await movieSearch(movieJSON.Name,movieJSON.Year);\n      let movieData = await movieDetails(movieID);\n      await updateCurrentMovie(userDataCopy,movieData, i);\n      \n    }\n    // cleaning out invalid media\n    console.log(userDataCopy.length)\n    const filteredUserDataCopy = userDataCopy.filter(movie => movie !== \"invalid media\")\n    setUserData(filteredUserDataCopy)\n    setAllQueriesCompleted(true)\n  }\n\n  const updateCurrentMovie = (userDataCopy,currMovieData,index) => {\n    return new Promise(function(resolve, reject) {\n      if (currMovieData === \"invalid media\"){\n        userDataCopy[index] = \"invalid media\"\n        resolve();\n      } else {\n        try {\n          userDataCopy[index].Runtime = currMovieData.runtime;\n          userDataCopy[index].Genres = currMovieData.genres;\n          resolve();\n        } catch {\n          reject();\n          setError(\"error\");\n        }\n      }\n    });\n  }\n\n  const movieSearch = async function(title,year) {\n    return new Promise(function(resolve, reject) {\n      console.log(`${title} - ${year}`)\n      fetch(`https://api.themoviedb.org/3/search/movie?api_key=${Secret.TMBD_API_KEY}&query=${title}&page=1&include_adult=true&year=${year}`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          //console.log(\"MOVIE SEARCHED\")\n          console.log(result);\n          if (result.results.length === 0){ // basically occurs if you log tv shows on letterboxd or an invalid movie\n            console.log(`INVALID MEDIA IS ${title} - ${year}`)\n            resolve(\"invalid media\")\n          } else {\n            resolve(result.results[0].id);\n          }\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setLoading(false);\n          setError(error);\n          reject();\n        }\n      )\n    });\n  }\n\n  const movieDetails = async function (id) {\n    return new Promise(function(resolve, reject) {\n      if (id === \"invalid media\") {\n        resolve(\"invalid media\")\n      } else {\n        fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${Secret.TMBD_API_KEY}&language=en-US`)\n        .then(res => res.json())\n        .then(\n          (result) => {\n            console.log(\"MOVIE DETAILED\")\n            console.log(result)\n            resolve(result)\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            setLoading(false);\n            setError(error);\n            reject()\n          }\n        )\n      }\n    });\n  }\n\n  const fileHandler = (event) => {\n    // from: https://medium.com/how-to-react/how-to-parse-or-read-csv-files-in-reactjs-81e8ee4870b0\n    // Passing file data (event.target.files[0]) to parse using Papa.parse\n\n    Papa.parse(event.target.files[0], {\n      header: true,\n      skipEmptyLines: true,\n      complete: function (results) {\n        let resultData = results.data; // result data from all years\n        // result data from specified time period\n        let resultsInPeriod = resultData.filter(movie => {return movie.Date.slice(0,4) === Constants.YEAR;}); \n        console.log(resultsInPeriod);\n        setUserData(resultsInPeriod);\n      },\n    });\n  };\n  \n  if (loading === true) {\n    return (\n      < Loading/>\n    );\n  } else {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>\n            Directions For Use\n          </p>\n          <div className='App-body'>\n            <p>\n            1. Log in to your account <br/>\n            2. Navigate to https://letterboxd.com/settings/ <br/>\n            3. Click “Import & Export” <br/>\n            4. Click \"Export Your Data\" <br/>\n            5. Unzip the folder and upload \"watched.csv\"\n            </p>\n          </div>\n          <div class=\"mb-3\">\n            <input class=\"form-control\" type=\"file\" id=\"csvFile\" accept=\".csv\" onChange={fileHandler}/>\n          </div>\n\n          <br/>\n        </header>\n      </div>\n    );\n  }\n}\n \nexport default Directions; // \"export default\" keywords specify the main component of the file","import './css/FilmsWatched.css';\nimport './css/App.css';\nimport React from 'react';\nimport * as Constants from './Constants.js';\n\nfunction FilmsWatched({onClick,filmDataObj}) {\n    return (\n      <div className=\"App\">\n        <header className=\"FilmsWatched-Header\">\n          <p> {`In ${Constants.YEAR}, you watched`} </p>\n          <h1> {`${filmDataObj.length} films`} </h1>\n          <button className = \"button\" onClick = {onClick}> Next </button>\n        </header>\n      </div>\n    );\n  }\n\nexport default FilmsWatched; // \"export default\" keywords specify the main component of the file","import './css/FilmsWatched.css';\nimport './css/App.css';\nimport React from 'react';\n\nfunction Error({onClick,filmDataObj}) {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p> An error has occured. Sorry T_T </p>\n        </header>\n      </div>\n    );\n  }\n\nexport default Error; // \"export default\" keywords specify the main component of the file","import './css/FilmsWatched.css';\nimport './css/App.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nfunction MinutesWatched({onClick,filmDataObj}) {\n    const [minutesData,setMinutesData] = useState(null);\n\n    useEffect(()=> {\n        console.log(\"minutes effected!\")\n        if (minutesData === null){\n            let totalMinutes = 0;\n            for (let i=0; i<filmDataObj.length; i++){\n                totalMinutes = totalMinutes + filmDataObj[i].Runtime\n            }\n            setMinutesData(totalMinutes.toLocaleString(\"en-US\"))\n        }\n    });\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p> In fact, you consumed </p>\n          <h1> {`${minutesData}`} </h1>\n          <p> minutes of film this year. </p>\n          <button className = \"button\" onClick = {onClick}> Next </button>\n        </header>\n      </div>\n    );\n  }\n\nexport default MinutesWatched; // \"export default\" keywords specify the main component of the file","import './css/FilmsWatched.css';\nimport './css/App.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nfunction TopGenres({onClick,filmDataObj}) {\n    const [genreData,setGenreData] = useState(null);\n    const [loading,setLoading] = useState(true);\n\n    useEffect(()=> {\n        console.log(\"effected!\")\n        if (genreData === null){\n            let genreDataObj = {}\n            for (let i=0; i<filmDataObj.length; i++){\n                for (let j=0; j<filmDataObj[i].Genres.length;j++){\n                    let currGenre = filmDataObj[i].Genres[j].name;\n                    if (genreDataObj.hasOwnProperty(currGenre)){\n                        genreDataObj[currGenre] = genreDataObj[currGenre] + 1;\n                        // console.log(`${currGenre} pops up ${genreDataObj[currGenre]} times!`)\n                    } else {\n                        genreDataObj[currGenre] = 1;\n                        // console.log(`${currGenre} pops up once`)\n                    }\n                }\n            }\n            // taking top 5 genres\n            let genreDataArray = Object.entries(genreDataObj).sort(function(a, b) {\n                return b[1] - a[1];\n            });\n            setGenreData(genreDataArray);\n            console.log(genreDataArray)\n            setLoading(false)\n        }\n    });\n\n    /*\n        <p>{`1. ${genreData[0]}`}</p><br/>\n          <p>{`2. ${genreData[1]}`}</p><br/>\n          <p>{`3. ${genreData[2]}`}</p><br/>\n          <p>{`4. ${genreData[3]}`}</p><br/>\n          <p>{`5. ${genreData[4]}`}</p>     \n    */\n\n    if (loading === false){\n        return (\n            <div className=\"App\">\n              <header className=\"FilmsWatched-Header\">\n                <h1 className = \"title\" >Your Top Genres </h1>\n                <p>{`1. ${genreData[0][0]}`}</p>\n                <p>{`2. ${genreData[1][0]}`}</p>\n                <p>{`3. ${genreData[2][0]}`}</p>\n                <p>{`4. ${genreData[3][0]}`}</p>\n                <p>{`5. ${genreData[4][0]}`}</p> \n                \n              </header>\n            </div>\n          );\n    }\n  }\n\nexport default TopGenres; // \"export default\" keywords specify the main component of the file","import React from 'react';\nimport { useState } from 'react';\n\n// pages\nimport Home from './Home';\nimport Directions from './Directions';\nimport FilmsWatched from './FilmsWatched';\nimport Error from './Error';\nimport MinutesWatched from './MinutesWatched';\nimport TopGenres from './TopGenres';\n\nfunction App() {\n  // note: a state variable’s value never changes within a render. be careful.\n  // remember to avoid direct mutations to object -> replace them w new ones so the frame rerenders\n  // TREAT STATE AS IMMUTABLE!\n  \n  const [pageIndex, setPageIndex] = useState(0);\n  const [filmDataObj, setFilmDataObj] = useState(null)\n\n  if (pageIndex === 0){\n    return (\n      <Home onClick={() => setPageIndex(1)}/>\n    );\n  } else if (pageIndex === 1){\n    return (\n      <Directions setPageIndex={setPageIndex}\n                  setFilmDataObj={setFilmDataObj} />\n    );\n  } else if (pageIndex === 2){\n    return (\n      <FilmsWatched onClick={() => setPageIndex(3)}\n              filmDataObj = {filmDataObj}\n      />\n    );\n  } else if (pageIndex === 3){\n    return (\n      <MinutesWatched onClick={() => setPageIndex(4)}\n              filmDataObj = {filmDataObj}\n      />\n    );\n  } else if (pageIndex === 4){\n    return (\n      <TopGenres onClick={() => setPageIndex(4)}\n              filmDataObj = {filmDataObj}\n      />\n    );\n  } else if (pageIndex === 'error'){\n    return (\n      <Error />\n    );\n  }\n}\n\nexport default App; // \"export default\" keywords specify the main component of the file","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}