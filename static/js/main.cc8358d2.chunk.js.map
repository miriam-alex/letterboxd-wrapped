{"version":3,"sources":["pages/Home.js","Constants.js","Secret.js","components/Loading.js","pages/Directions.js","pages/FilmsWatched.js","pages/MinutesWatched.js","pages/TopGenres.js","components/Error.js","App.js","reportWebVitals.js","index.js"],"names":["Home","_ref","onClick","react_default","a","createElement","className","YEAR","TMBD_API_KEY","Loading","genreList","colorList","_useState","useState","Math","floor","random","_useState2","Object","slicedToArray","genre","setGenre","_useState3","_useState4","color","setColor","useEffect","interval","setInterval","clearInterval","style","concat","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Directions","setPageIndex","setFilmDataObj","setErrorMessage","userData","setUserData","allQueriesCompleted","setAllQueriesCompleted","_useState5","_useState6","loading","setLoading","_useState7","_useState8","setError","fetchData","console","log","_ref2","asyncToGenerator","_callee","userDataCopy","movieJSON","movieID","movieData","filteredUserDataCopy","_context","JSON","parse","stringify","movieSearch","Name","Year","movieDetails","updateCurrentMovie","filter","movie","apply","arguments","currMovieData","index","Runtime","runtime","Genres","genres","_unused","_ref3","_callee2","title","year","_context2","fetch","Secret","res","json","results","id","_x","_x2","_ref4","_callee3","_context3","_x3","components_Loading","accept","onChange","event","Papa","target","files","header","skipEmptyLines","resultData","data","resultsInPeriod","Constants","findIndex","t","Date","Rating","Rewatch","Tags","_unused2","FilmsWatched","filmDataObj","MinutesWatched","minutesData","setMinutesData","totalMinutes","toLocaleString","TopGenres","genreData","setGenreData","genreDataObj","j","currGenre","genreDataArray","entries","sort","b","errorMessage","App","pageIndex","pages_Home","pages_Directions","pages_FilmsWatched","pages_MinutesWatched","pages_TopGenres","components_Error","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.cc8358d2.chunk.js","sourcesContent":["import '../css/App.css';\nimport React from 'react';\n\nfunction Home({onClick}) {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>\n          Are you a Letterboxd user <br/> with an undying need <br/> to quantify your love for film? <br/> \n          </p>\n          <button className = \"button\" onClick = {onClick}> Absolutely. </button>\n          <p className='App-bottom'>This product uses the TMDB API but is not endorsed or certified by TMDB.</p>\n        </header>\n      </div>\n    );\n  }\n\nexport default Home; // \"export default\" keywords specify the main component of the file","// constants for testing\nexport const YEAR = \"2022\"\n","export const TMBD_API_KEY = 'df1e67f460086cadab34f9c9bee0f3d6'\n","import '../css/FilmsWatched.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nfunction Loading() {\n    let genreList = ['Romcoms','Detective Films','Anime','Dramas','YA Dystopias','Cats: The Musical','Terrible Horror Films','Oscar Bait','Your Mom','Theater']\n    let colorList = ['#FF68A8', '#64CFF7', '#F7E752', '#CA7CD8', '#3968CB', '#E3826F', '#E4A9A4', '#EFBA97', '#F1CCBB', '#E7D5C7']\n    const [genre,setGenre] = useState(genreList[Math.floor(Math.random() * 10)]);\n    const [color,setColor] = useState(colorList[Math.floor(Math.random() * 10)]);\n    \n    useEffect(() => {\n      const interval = setInterval(() => {\n        setGenre(genreList[Math.floor(Math.random() * 10)]);\n        setColor(colorList[Math.floor(Math.random() * 10)]);\n      }, 1600);\n      return () => clearInterval(interval);\n    }, []);\n\n\n    // {`color: #${color}`\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p> Loading <span style ={{color: `${color}`}} >{`${genre}`}</span>... </p>\n        </header>\n      </div>\n    );\n  }\n\nexport default Loading; // \"export default\" keywords specify the main component of the file","import '../css/App.css';\nimport React, { useEffect } from 'react';\nimport Papa from 'papaparse';\nimport { useState } from 'react';\nimport * as Constants from '../Constants.js';\nimport * as Secret from '../Secret';\nimport Loading from '../components/Loading';\n\nfunction Directions({setPageIndex, setFilmDataObj,setErrorMessage}) {\n  const [userData,setUserData] = useState(null);\n\n  // for querying movie data\n  const [allQueriesCompleted,setAllQueriesCompleted] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(()=> { // should only trigger upon upload -> state change!\n    if (userData != null && allQueriesCompleted === false){ // if there's data to process\n      fetchData()\n      setLoading(true)\n    } else if (allQueriesCompleted === true && loading === true){\n      console.log(\"all queries completed. final user data below\")\n      console.log(userData)\n      setFilmDataObj(userData);\n      setLoading(false)\n      setPageIndex(2)\n    } else if (error != null) {\n      setPageIndex('error')\n    }\n  });\n  \n  const fetchData = async function() {\n    let userDataCopy = JSON.parse(JSON.stringify(userData));\n    for (let i=0; i<userData.length; i++){\n      console.log(`looking @ movie ${i}`);\n\n      let movieJSON = userData[i];\n      let movieID = await movieSearch(movieJSON.Name,movieJSON.Year);\n      let movieData = await movieDetails(movieID);\n      await updateCurrentMovie(userDataCopy,movieData, i);\n      \n    }\n    // cleaning out invalid media\n    console.log(userDataCopy.length)\n    const filteredUserDataCopy = userDataCopy.filter(movie => movie !== \"invalid media\")\n    setUserData(filteredUserDataCopy)\n    setAllQueriesCompleted(true)\n  }\n\n  const updateCurrentMovie = (userDataCopy,currMovieData,index) => {\n    return new Promise(function(resolve, reject) {\n      if (currMovieData === \"invalid media\"){\n        userDataCopy[index] = \"invalid media\"\n        resolve();\n      } else {\n        try {\n          userDataCopy[index].Runtime = currMovieData.runtime;\n          userDataCopy[index].Genres = currMovieData.genres;\n          resolve();\n        } catch {\n          reject();\n          setError(\"Something has gone haywire. Sorry for the inconvience.\");\n        }\n      }\n    });\n  }\n\n  const movieSearch = async function(title,year) {\n    return new Promise(function(resolve, reject) {\n      console.log(`${title} - ${year}`)\n      fetch(`https://api.themoviedb.org/3/search/movie?api_key=${Secret.TMBD_API_KEY}&query=${title}&page=1&include_adult=true&year=${year}`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          //console.log(\"MOVIE SEARCHED\")\n          console.log(result);\n          if (result.results.length === 0){ // basically occurs if you log tv shows on letterboxd or an invalid movie\n            console.log(`INVALID MEDIA IS ${title} - ${year}`)\n            resolve(\"invalid media\")\n          } else {\n            resolve(result.results[0].id);\n          }\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setLoading(false);\n          setError(\"There is an issue with retrieving data from the API. Please try again.\");\n          reject();\n        }\n      )\n    });\n  }\n\n  const movieDetails = async function (id) {\n    return new Promise(function(resolve, reject) {\n      if (id === \"invalid media\") {\n        resolve(\"invalid media\")\n      } else {\n        fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${Secret.TMBD_API_KEY}&language=en-US`)\n        .then(res => res.json())\n        .then(\n          (result) => {\n            console.log(\"MOVIE DETAILED\")\n            console.log(result)\n            resolve(result)\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            setLoading(false);\n            setError(\"There is an issue with retrieving data from the API. Please try again.\");;\n            reject()\n          }\n        )\n      }\n    });\n  }\n\n  const fileHandler = (event) => {\n    // from: https://medium.com/how-to-react/how-to-parse-or-read-csv-files-in-reactjs-81e8ee4870b0\n    // Passing file data (event.target.files[0]) to parse using Papa.parse\n\n    Papa.parse(event.target.files[0], {\n      header: true,\n      skipEmptyLines: true,\n      complete: function (results) {\n        console.log(event.target.files[0].name)\n\n        if (event.target.files[0].name !== 'diary.csv'){\n          setError(\"You might have attached the wrong file. Please try again.\")\n        } else {\n          let resultData = results.data; // result data from all years\n          // result data from specified time period\n          let resultsInPeriod = null\n          try {\n            resultsInPeriod = resultData.filter(movie => {return movie['Watched Date'].slice(0,4) === Constants.YEAR;}); \n\n            resultsInPeriod = resultsInPeriod.filter((resultsInPeriod, index, self) =>\n              index === self.findIndex((t) => \n              (t.Date === resultsInPeriod.Date && t.Name === resultsInPeriod.Name &&\n              t.Rating === resultsInPeriod.Rating && t.Rewatch === resultsInPeriod.Rewatch &&\n              t.Tags === resultsInPeriod.Tags && t.Tags === resultsInPeriod.Tags &&\n              t['Watched Date'] === resultsInPeriod['Watched Date'] && t.Year === resultsInPeriod.Year)))\n            } catch {\n              setError(\"You might have attached the wrong file. Please try again.\")\n            }\n          setUserData(resultsInPeriod);\n        }\n      },\n    });\n  };\n  if (error){\n    setPageIndex('error')\n    setErrorMessage(error)\n  } else if (loading === true) {\n    return (\n      < Loading/>\n    );\n  } else {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>\n            Directions For Use\n          </p>\n          <div className='App-body'>\n            <p>\n            1. Log in to your account <br/>\n            2. Navigate to https://letterboxd.com/settings/ <br/>\n            3. Click “Import & Export” <br/>\n            4. Click \"Export Your Data\" <br/>\n            5. Unzip the folder and upload \"diary.csv\"\n            </p>\n          </div>\n          <div className=\"mb-3\">\n            <input className=\"form-control\" type=\"file\" id=\"csvFile\" accept=\".csv\" onChange={fileHandler}/>\n          </div>\n          <br/>\n        </header>\n      </div>\n    );\n  }\n}\n \nexport default Directions; // \"export default\" keywords specify the main component of the file","import '../css/FilmsWatched.css';\nimport '../css/App.css';\nimport React from 'react';\nimport * as Constants from '../Constants.js';\n\nfunction FilmsWatched({onClick,filmDataObj}) {\n    return (\n      <div className=\"App\">\n        <header className=\"FilmsWatched-Header\">\n          <p> {`In ${Constants.YEAR}, you watched`} </p>\n          <h1> {`${filmDataObj.length} films`} </h1>\n          <button className = \"button\" onClick = {onClick}> Next </button>\n        </header>\n      </div>\n    );\n  }\n\nexport default FilmsWatched; // \"export default\" keywords specify the main component of the file","import '../css/FilmsWatched.css';\nimport '../css/App.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nfunction MinutesWatched({onClick,filmDataObj}) {\n    const [minutesData,setMinutesData] = useState(null);\n\n    useEffect(()=> {\n        console.log(\"minutes effected!\")\n        if (minutesData === null){\n            let totalMinutes = 0;\n            for (let i=0; i<filmDataObj.length; i++){\n                totalMinutes = totalMinutes + filmDataObj[i].Runtime\n            }\n            setMinutesData(totalMinutes.toLocaleString(\"en-US\"))\n        }\n    });\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p> In fact, you consumed </p>\n          <h1> {`${minutesData}`} </h1>\n          <p> minutes of film this year. </p>\n          <button className = \"button\" onClick = {onClick}> Next </button>\n        </header>\n      </div>\n    );\n  }\n\nexport default MinutesWatched; // \"export default\" keywords specify the main component of the file","import '../css/FilmsWatched.css';\nimport '../css/App.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport Loading from '../components/Loading';\n\nfunction TopGenres({onClick,filmDataObj}) {\n    const [genreData,setGenreData] = useState(null);\n    const [loading,setLoading] = useState(true);\n\n    useEffect(()=> {\n        console.log(\"effected!\")\n        if (genreData === null){\n            let genreDataObj = {}\n            for (let i=0; i<filmDataObj.length; i++){\n                for (let j=0; j<filmDataObj[i].Genres.length;j++){\n                    let currGenre = filmDataObj[i].Genres[j].name;\n                    if (genreDataObj.hasOwnProperty(currGenre)){\n                        genreDataObj[currGenre] = genreDataObj[currGenre] + 1;\n                        // console.log(`${currGenre} pops up ${genreDataObj[currGenre]} times!`)\n                    } else {\n                        genreDataObj[currGenre] = 1;\n                        // console.log(`${currGenre} pops up once`)\n                    }\n                }\n            }\n\n            \n            // taking top 5 genres\n            let genreDataArray = Object.entries(genreDataObj).sort(function(a, b) {\n                return b[1] - a[1];\n            });\n            setGenreData(genreDataArray);\n            console.log(genreDataArray)\n            \n            \n            setLoading(false)\n        }\n    });\n\n    if (loading === false && genreData.length >= 5){\n        return (\n            <div className=\"App\">\n              <header className=\"FilmsWatched-Header\">\n                <h1 className = \"title\" >Your Top Genres </h1>\n                <p>{`1. ${genreData[0][0]}`}</p>\n                <p>{`2. ${genreData[1][0]}`}</p>\n                <p>{`3. ${genreData[2][0]}`}</p>\n                <p>{`4. ${genreData[3][0]}`}</p>\n                <p>{`5. ${genreData[4][0]}`}</p> \n                \n              </header>\n            </div>\n          );\n    } else if (loading === true){\n      return(\n        <Loading/>\n      );\n    } else {\n        return (\n            <div className=\"App\">\n              <header className=\"FilmsWatched-Header\">\n                <p>{`We hate to say it, but need to watch more movies. \n                    We only have (a bit of) information on ${genreData.length} of the genres you like.`} </p>\n              </header>\n            </div>\n          );\n    }\n  }\n\nexport default TopGenres; // \"export default\" keywords specify the main component of the file","import '../css/FilmsWatched.css';\nimport '../css/App.css';\nimport React from 'react';\n\nfunction Error({errorMessage, onClick}) {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p className='App-body'> {`${errorMessage}`} </p>\n          <button className = \"button\" onClick = {onClick}> Go home. </button>\n        </header>\n      </div>\n    );\n  }\n\nexport default Error; // \"export default\" keywords specify the main component of the file","import React from 'react';\nimport { useState } from 'react';\n\n// pages\nimport Home from './pages/Home';\nimport Directions from './pages/Directions';\nimport FilmsWatched from './pages/FilmsWatched';\nimport MinutesWatched from './pages/MinutesWatched';\nimport TopGenres from './pages/TopGenres';\nimport Error from './components/Error';\n\nfunction App() {\n  // note: a state variable’s value never changes within a render. be careful.\n  // remember to avoid direct mutations to object -> replace them w new ones so the frame rerenders\n  // TREAT STATE AS IMMUTABLE!\n  \n  const [pageIndex, setPageIndex] = useState(0);\n  const [filmDataObj, setFilmDataObj] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  if (pageIndex === 0){\n    return (\n      <Home onClick={() => setPageIndex(1)}/>\n    );\n  } else if (pageIndex === 1){\n    return (\n      <Directions setPageIndex={setPageIndex}\n                  setFilmDataObj={setFilmDataObj} \n                  setErrorMessage={setErrorMessage}/>\n    );\n  } else if (pageIndex === 2){\n    return (\n      <FilmsWatched onClick={() => setPageIndex(3)}\n              filmDataObj = {filmDataObj}\n      />\n    );\n  } else if (pageIndex === 3){\n    return (\n      <MinutesWatched onClick={() => setPageIndex(4)}\n              filmDataObj = {filmDataObj}\n      />\n    );\n  } else if (pageIndex === 4){\n    return (\n      <TopGenres onClick={() => setPageIndex(4)}\n              filmDataObj = {filmDataObj}\n      />\n    );\n  } else if (pageIndex === 'error'){\n    return (\n      <Error errorMessage = {errorMessage} \n              onClick = {() => setPageIndex(0)} />\n    );\n  }\n}\n\nexport default App; // \"export default\" keywords specify the main component of the file","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}