{"version":3,"sources":["pages/Home.js","Secret.js","components/Loading.js","pages/Directions.js","pages/FilmsWatched.js","pages/MinutesWatched.js","components/PieChartComponent.js","pages/TopGenres.js","pages/ProductionMap.js","components/Error.js","components/MovieNumber.js","pages/FavoriteMovies.js","pages/AboutMe.js","components/Infographic.js","pages/Final.js","App.js","reportWebVitals.js","index.js"],"names":["Home","_ref","onClick","onClickInfo","React","createElement","className","type","href","xmlns","width","height","fill","class","viewBox","d","TMBD_API_KEY","Loading","genreList","colorList","_useState","useState","_useState2","_slicedToArray","genre","setGenre","_useState3","_useState4","color","setColor","useEffect","index","interval","setInterval","clearInterval","key","Math","random","style","concat","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Directions","setPageIndex","setFilmDataObj","setErrorMessage","setMinutesData","setGenreData","setMapData","userData","setUserData","allQueriesCompleted","setAllQueriesCompleted","_useState5","_useState6","loading","setLoading","_useState7","_useState8","fetchCalled","setFetchCalled","_useState9","_useState10","setError","fetchData","_ref2","_asyncToGenerator","_callee","userDataCopy","movieJSON","movieID","movieData","director","filteredUserDataCopy","totalMinutes","_i","_context","JSON","parse","stringify","movieSearch","Name","Year","movieDetails","directorDetails","updateCurrentMovie","filter","movie","Runtime","getGenreData","getMapData","apply","arguments","currMovieData","runtime","PosterPath","poster_path","Genres","genres","ProductionCountries","production_countries","Director","_unused","_ref3","_callee2","title","year","_context2","fetch","Secret","res","json","results","id","_x","_x2","_ref4","_callee3","_context3","crew","_ref5","job","_x3","_ref6","_callee4","_context4","_x4","filmDataObj","genreDataObj","j","currGenre","entries","sort","a","b","mapData","productionCountries","productionCountry","iso_3166_1","accept","onChange","event","Papa","target","files","header","skipEmptyLines","resultData","data","resultsInPeriod","Date","getFullYear","toString","findIndex","t","Rating","Rewatch","Tags","_unused2","FilmsWatched","MinutesWatched","minutesData","pageState","setPageState","msg","setMsg","message","CountUp","end","PieChartComponent","COLORS","ResponsiveContainer","PieChart","Pie","dataKey","innerRadius","outerRadius","map","Cell","Tooltip","content","active","payload","label","TopGenres","genreData","displayData","setDisplayData","canDisplay","setCanDisplay","ProductionMap","mapMessage","setMapMessage","helpMessage","setHelpMessage","countryNum","VectorMap","worldMill","backgroundColor","zoomOnScroll","containerStyle","containerClassName","regionStyle","initial","fill-opacity","stroke","stroke-width","stroke-opacity","hover","cursor","selected","selectedHover","regionsSelectable","series","regions","scale","normalizeFunction","errorMessage","MovieNumber","image_slug","rating","lb_url","url","altText","stars","parseInt","rel","src","alt","FavoriteMovies","setTopMovies","canLoad","setCanLoad","parseFloat","AboutMe","Infographic","topMovies","console","log","background","toLocaleString","Final","printRef","useRef","bgColor","setBgColor","handleDownloadImage","element","canvas","link","current","html2canvas","allowTaint","useCORS","toDataURL","document","download","body","appendChild","click","removeChild","window","open","colorCode","floor","ref","App","pageIndex","_useState11","_useState12","_useState13","_useState14","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.2b32925e.chunk.js","sourcesContent":["import '../css/App.css';\nimport React from 'react';\n\n//      old button     <button className = \"button\" onClick = {onClick}> Absolutely. </button>\n\nfunction Home({onClick, onClickInfo}) {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className = \"rem-padding\">\n            <p className = \"transform\">\n            Are you a Letterboxd user <br/> with an undying need <br/> to quantify your love for film? <br/> \n            </p>\n          </div>\n          <button type=\"button\" className=\"btn btn-outline-light\" href=\"App.css\" onClick = {onClick}> Absolutely. </button>\n            <button className = \"info-button\" onClick = {onClickInfo} >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"#FFFFFF\" class=\"bi bi-info-circle\" viewBox=\"0 0 16 16\">\n                <path d=\"M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n                <path d=\"m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z\"/>\n              </svg>\n            </button>\n          <p className='App-bottom'>This product uses the TMDB API but is not endorsed or certified by TMDB.</p>\n        </header>\n      </div>\n    );\n  }\n\nexport default Home; // \"export default\" keywords specify the main component of the file","export const TMBD_API_KEY = 'df1e67f460086cadab34f9c9bee0f3d6'\n","import '../css/FilmsWatched.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nfunction Loading() {\n    let genreList = ['Romcoms', 'Anime','Dramas','Horror','Musicals','Plays']\n    let colorList = ['#F4E0F4', '#D7EBAD', '#D9BFD9', '#FBD6EB', '#F6F3DC']\n    const [genre,setGenre] = useState(genreList[4]);\n    const [color,setColor] = useState(colorList[4]);\n    \n    useEffect(() => {\n      let index = 0;\n      const interval = setInterval(() => {\n        setGenre(genreList[index]);\n        setColor(colorList[index]);\n        if (index === 4){\n          index = 0\n        } else {\n          index += 1\n        }\n      }, 1600);\n      return () => clearInterval(interval);\n    }, []);\n\n    return (\n      <div className=\"App\">\n          <header className=\"App-header\">\n            <div className= 'fade-in-animation'>\n              <p> Loading <span key = {Math.random()} className = 'genre-loading'> <span style ={{color: `${color}`}} >{`${genre}`}</span>... </span> </p>\n            </div>\n          </header>\n      </div>\n    );\n  }\n\nexport default Loading; // \"export default\" keywords specify the main component of the file","import '../css/App.css';\nimport '../css/Animations.css';\nimport React, { useEffect } from 'react';\nimport Papa from 'papaparse';\nimport { useState } from 'react';\nimport * as Secret from '../Secret';\nimport Loading from '../components/Loading';\n\n\nfunction Directions({setPageIndex, setFilmDataObj,setErrorMessage, \n                    setMinutesData, setGenreData, setMapData}) {\n  const [userData,setUserData] = useState(null);\n\n  // for querying movie data\n  const [allQueriesCompleted,setAllQueriesCompleted] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [fetchCalled, setFetchCalled] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(()=> { // should only trigger upon upload -> state change!\n    if (userData != null && allQueriesCompleted === false && fetchCalled === false){ // if there's data to process\n      fetchData()\n      //test()\n      setFetchCalled(true)\n      setLoading(true)\n    } else if (allQueriesCompleted === true && loading === true){\n      setFilmDataObj(userData);\n      //console.log(userData);\n      setLoading(false)\n      setPageIndex(2)\n    } else if (error != null) {\n      setPageIndex('error')\n    }\n  });\n\n  /*\n  const test = function(){\n    fetch('https://letterboxd.com/reactionshot/films/diary/for/2023/', {\n      \n    })\n    .then(function (response) {\n        switch (response.status) {\n            // status \"OK\"\n            case 200:\n                return response.text();\n            // status \"Not Found\"\n            case 404:\n                throw response;\n        }\n    })\n    .then(function (template) {\n        console.log(\"found\")\n        console.log(template);\n    })\n    .catch(function (response) {\n        // \"Not Found\"\n        console.log(\"not found\")\n        console.log(response.statusText);\n    });\n  }\n  */\n\n  const fetchData = async function() {\n    let userDataCopy = JSON.parse(JSON.stringify(userData));\n    for (let i=0; i<userData.length; i++){\n      let movieJSON = userData[i];\n      let movieID = await movieSearch(movieJSON.Name,movieJSON.Year);\n      let movieData = await movieDetails(movieID);\n      let director = await directorDetails(movieID);\n      await updateCurrentMovie(userDataCopy,movieData, director, i);\n    }\n    // cleaning out invalid media\n    //console.log(userDataCopy.length)\n    const filteredUserDataCopy = userDataCopy.filter(movie => movie !== \"invalid media\")\n    setUserData(filteredUserDataCopy)\n\n\n    // calculating minutes data\n    let totalMinutes = 0;\n    for (let i=0; i<filteredUserDataCopy.length; i++){\n        totalMinutes = totalMinutes + filteredUserDataCopy[i].Runtime\n    }\n    setMinutesData(totalMinutes);\n    setGenreData(getGenreData(filteredUserDataCopy))\n    setMapData(getMapData(filteredUserDataCopy))\n  \n    // calculating genre data\n\n    setAllQueriesCompleted(true)\n  }\n\n  const updateCurrentMovie = (userDataCopy,currMovieData,director,index) => {\n    return new Promise(function(resolve, reject) {\n      if (currMovieData === \"invalid media\"){\n        userDataCopy[index] = \"invalid media\"\n        resolve();\n      } else {\n        try {\n          userDataCopy[index].Runtime = currMovieData.runtime;\n          userDataCopy[index].PosterPath = currMovieData.poster_path;\n          userDataCopy[index].Genres = currMovieData.genres;\n          userDataCopy[index].ProductionCountries = currMovieData.production_countries;\n          userDataCopy[index].Director = director;\n          //console.log(userDataCopy[index])\n          resolve();\n        } catch {\n          reject();\n          setError(\"Something has gone haywire. Sorry for the inconvience.\");\n        }\n      }\n    });\n  }\n\n  const movieSearch = async function(title,year) {\n    return new Promise(function(resolve, reject) {\n      //console.log(`${title} - ${year}`)\n      fetch(`https://api.themoviedb.org/3/search/movie?api_key=${Secret.TMBD_API_KEY}&query=${title}&page=1&include_adult=true&year=${year}`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          //console.log(\"MOVIE SEARCHED\")\n          //console.log(result);\n          if (result.results.length === 0){ // basically occurs if you log tv shows on letterboxd or an invalid movie\n            //console.log(`INVALID MEDIA IS ${title} - ${year}`)\n            resolve(\"invalid media\")\n          } else {\n            resolve(result.results[0].id);\n          }\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          setLoading(false);\n          setError(\"There is an issue with retrieving data from the API. Please try again.\");\n          reject();\n        }\n      )\n    });\n  }\n\n  const directorDetails = async function (id) {\n    return new Promise(function(resolve, reject) {\n      if (id === \"invalid media\") {\n        resolve(\"invalid media\")\n      } else {\n        fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${Secret.TMBD_API_KEY}`)\n        .then(res => res.json())\n        .then(\n          (result) => {\n            //console.log(result.crew.filter(({job})=> job ==='Director')[0].name)\n            resolve(result.crew.filter(({job})=> job ==='Director')[0].name)\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            setLoading(false);\n            setError(\"There is an issue with retrieving data from the API. Please try again.\");;\n            reject()\n          }\n        )\n      }\n    });\n  }\n\n  const movieDetails = async function (id) {\n    return new Promise(function(resolve, reject) {\n      if (id === \"invalid media\") {\n        resolve(\"invalid media\")\n      } else {\n        //console.log(id)\n        fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${Secret.TMBD_API_KEY}&language=en-US`)\n        .then(res => res.json())\n        .then(\n          (result) => {\n            //console.log(\"MOVIE DETAILED\")\n            //console.log(result)\n            resolve(result)\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            setLoading(false);\n            setError(\"There is an issue with retrieving data from the API. Please try again.\");;\n            reject()\n          }\n        )\n      }\n    });\n  }\n\n  const getGenreData = (filmDataObj) => {\n    let genreDataObj = {}\n    for (let i=0; i<filmDataObj.length; i++){\n        for (let j=0; j<filmDataObj[i].Genres.length;j++){\n            let currGenre = filmDataObj[i].Genres[j].name;\n            if (genreDataObj.hasOwnProperty(currGenre)){\n                genreDataObj[currGenre] = genreDataObj[currGenre] + 1;\n            } else {\n                genreDataObj[currGenre] = 1;\n            }\n        }\n    }\n\n    //sorting genres by movie count\n    let genreDataArray = Object.entries(genreDataObj).sort(function(a, b) {\n        return b[1] - a[1];\n    });\n\n    return genreDataArray\n  }\n\n  const getMapData = (filmDataObj) => {\n    let mapData = []\n    for (let i=0; i<filmDataObj.length; i++){\n        let productionCountries = filmDataObj[i].ProductionCountries;\n        for (let i=0; i<productionCountries.length; i++){\n            let productionCountry = productionCountries[i].iso_3166_1;\n            if (!mapData.hasOwnProperty(productionCountry)){\n                mapData[productionCountry] = 1;\n            } else {\n                mapData[productionCountry] += 1;\n            }\n        }\n    }\n    //console.log(mapData)\n    return mapData\n  }\n\n  const fileHandler = (event) => {\n    // from: https://medium.com/how-to-react/how-to-parse-or-read-csv-files-in-reactjs-81e8ee4870b0\n    // Passing file data (event.target.files[0]) to parse using Papa.parse\n\n    Papa.parse(event.target.files[0], {\n      header: true,\n      skipEmptyLines: true,\n      complete: function (results) {\n        //console.log(event.target.files[0].name)\n\n        if (event.target.files[0].name !== 'diary.csv'){\n          setError(\"You might have attached the wrong file. Please try again.\")\n        } else {\n          let resultData = results.data; // result data from all years\n          // result data from specified time period\n          let resultsInPeriod = null\n          try {\n            resultsInPeriod = resultData.filter(movie => {return movie['Watched Date'].slice(0,4) === (new Date()).getFullYear().toString();}); \n\n            resultsInPeriod = resultsInPeriod.filter((resultsInPeriod, index, self) =>\n              index === self.findIndex((t) => \n              (t.Date === resultsInPeriod.Date && t.Name === resultsInPeriod.Name &&\n              t.Rating === resultsInPeriod.Rating && t.Rewatch === resultsInPeriod.Rewatch &&\n              t.Tags === resultsInPeriod.Tags && t.Tags === resultsInPeriod.Tags &&\n              t['Watched Date'] === resultsInPeriod['Watched Date'] && t.Year === resultsInPeriod.Year)))\n            } catch {\n              setError(\"You might have attached the wrong file. Please try again.\")\n            }\n          setUserData(resultsInPeriod);\n        }\n      },\n    });\n  };\n\n\n\n  // RENDERING THE PAGE\n  if (error){\n    setPageIndex('error')\n    setErrorMessage(error)\n  } else if (loading === true) {\n    return (\n      < Loading/>\n    );\n  } else {\n    return (\n      <div className=\"App\">\n          <header className=\"App-header\">\n          <div className= 'fade-in-animation'>\n              <p>\n                Directions For Use\n              </p>\n              <div className = \"rem-padding\">\n                <div className='App-body'>\n                  <p>\n                  1. Log in to your Letterboxd account <br/>\n                  2. Navigate to <a href=\"https://letterboxd.com/settings/\">Settings</a>.<br/>\n                  3. Click “Import & Export” <br/>\n                  4. Click \"Export Your Data\" <br/>\n                  5. Unzip the folder and upload \"diary.csv\"\n                  </p>\n                </div>\n              </div>\n              <div className=\"mb-3\">\n                <input className=\"form-control\" type=\"file\" id=\"csvFile\" accept=\".csv\" onChange={fileHandler}/>\n              </div>\n              <br/>\n            </div>\n          </header>\n      </div>\n    );\n  }\n}\n \nexport default Directions; // \"export default\" keywords specify the main component of the file","import '../css/FilmsWatched.css';\nimport '../css/App.css';\nimport '../css/Animations.css';\n\nimport React from 'react';\n\nfunction FilmsWatched({onClick,filmDataObj}) {\n    return (\n      <div className=\"App\">\n        <header className=\"films-watched-header\">\n        <div className= 'fade-in-animation'>\n          <p> {`In ${(new Date()).getFullYear()}, you watched`} </p>\n          <h1> {`${filmDataObj.length} films`} </h1>\n          <button type=\"button\" class=\"btn btn-outline-light\" href = '../css/FilmsWatched.css' onClick = {onClick}> Next </button>\n          </div>\n        </header>\n      </div>\n    );\n  }\n\nexport default FilmsWatched; // \"export default\" keywords specify the main component of the file","import '../css/FilmsWatched.css';\nimport '../css/App.css';\nimport '../css/Animations.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport CountUp from 'react-countup';\nimport Loading from '../components/Loading'; \n\n\nfunction MinutesWatched({onClick,minutesData}) {\n    const [pageState, setPageState] = useState(\"loading\");\n    const [msg, setMsg] = useState(null);\n\n    useEffect(()=> {\n      if (msg === null){\n          let message = \"(\"\n\n          if (minutesData === 0){\n            message += \"Impressive! Do you live in a jungle?\"\n          } else if (minutesData < 200){\n            message += \"This is barely two romantic comedies.\"  \n          } else if (minutesData < 1000){\n            message += \"Indulge yourself a little more.\"  \n          } else if (minutesData < 2000) {\n            message += \"Average.\"  \n          } else if (minutesData < 3000) {\n            message += \"You probably have the Oscar nominations list bookmarked.\"  \n          } else if (minutesData < 4000) {\n            message += \"A little worried, I think.\"  \n          } else {\n            message += \"Abed Nadir would be proud.\"\n          }\n\n          message += \")\"\n\n          setPageState(\"done loading\");\n          setMsg(message);\n      }\n    });\n\n    if (pageState === \"done loading\"){\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <div className= 'fade-in-animation'>\n              <div className = \"rem-padding\">\n                <p> In fact, you've consumed </p>\n                <div className = \"counter\">\n                  <CountUp end={minutesData} />\n                </div>\n                <p> minutes of film this year. </p>\n                <p className='abed-nadir'> {msg} </p>\n              </div>\n              <button type=\"button\" class=\"btn btn-outline-light\" onClick = {onClick}> Next </button>\n            </div>\n          </header>\n        </div>\n      );\n    } else {\n      return (<Loading/> );\n    }\n    \n  }\n\nexport default MinutesWatched; // \"export default\" keywords specify the main component of the file","import '../css/FilmsWatched.css';\nimport '../css/App.css';\nimport React from 'react';\nimport { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from \"recharts\";\n\n\nfunction PieChartComponent({data}) {\n\n    const COLORS = ['#1F363D', '#40798C', '#70A9A1', '#9EC1A3', \"#CFE0C3\"];\n\n    const CustomTooltip = ({ active, payload, label }) => {\n        if (active && payload && payload.length) {\n          return (\n            <div className=\"genres-tooltip\">\n              <p> You've watched {payload[0].value} movies {\"\\n\"} tagged {payload[0].name}. </p>\n            </div>\n          );\n        }\n      \n        return null;\n      };\n\n    return (\n        <ResponsiveContainer width=\"100%\" height={310}>\n            <PieChart>\n            <Pie\n                dataKey=\"value\"\n                data={data}\n                innerRadius={50}\n                outerRadius={155}\n                fill=\"#8884d8\"\n            >\n            {data.map((entry, index) => (\n                <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n            ))}\n            </Pie>\n            <Tooltip content={<CustomTooltip />} />\n            </PieChart>\n        </ResponsiveContainer>\n    );\n  }\n\nexport default PieChartComponent; // \"export default\" keywords specify the main component of the file","import '../css/FilmsWatched.css';\nimport '../css/App.css';\nimport '../css/Animations.css';\n\nimport React, { useState, useEffect} from \"react\";\nimport Loading from '../components/Loading';\nimport PieChartComponent from '../components/PieChartComponent';\n\n\nfunction TopGenres({onClick,genreData}) {\n    const [loading,setLoading] = useState(true);\n    const [displayData,setDisplayData] = useState(null);\n    const [canDisplay, setCanDisplay] = useState(true);\n\n    const data = [\n      {\n        name: \"Unpop1\",\n        value: 4000\n      },\n      {\n        name: \"Unpop2\",\n        value: 3000\n      },\n      {\n        name: \"Unpop3\",\n        value: 2000\n      },\n      {\n        name: \"Unpop4\",\n        value: 2780\n      },\n      {\n        name: \"Unpop5\",\n        value: 1890\n      }\n    ];\n\n    useEffect(()=> {\n        if (displayData === null){\n            // actually taking top 5\n            if (genreData.length >= 5){\n              for (var i = 0; i < data.length; i++) {\n                data[i].name = genreData[i][0];\n                data[i].value = genreData[i][1];\n              } \n              setDisplayData(data);\n            } else {\n              setCanDisplay(false);\n            }\n            setLoading(false)\n          }\n        }\n    );\n\n    if (loading === false && canDisplay){\n        return (\n            <div className=\"App\">\n              <div className = \"top-genres-header\">\n                <div className= 'fade-in-animation'>\n                  <h1 className = \"title\" > One might call you a genre connoisseur. </h1>\n                  <div className = \"pie-chart\">\n                    <PieChartComponent data = {displayData} />\n                  </div>\n                </div>\n                <button type=\"button\" class=\"btn btn-outline-light\" href = '../css/FilmsWatched.css' onClick = {onClick}> Next </button>\n              </div>\n            </div>\n          );\n    } else if (loading === true){\n      return(\n        <Loading/>\n      );\n    } else {\n        return (\n            <div className=\"App\">\n              <header className=\"films-watched-header\">\n                <div className= 'fade-in-animation'>\n                  <p> Some might wonder <br/>\n                      how you survive on so little media. <br/>\n                      Maybe you're off the grid. </p>\n                  <button type=\"button\" class=\"btn btn-outline-light\" href = '../css/FilmsWatched.css' onClick = {onClick}> Next </button>\n                </div>\n              </header>\n            </div>\n          );\n    }\n  }\n\nexport default TopGenres; // \"export default\" keywords specify the main component of the file","import '../css/FilmsWatched.css';\nimport '../css/App.css';\nimport '../css/Animations.css';\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { VectorMap } from \"@react-jvectormap/core\"\nimport { worldMill } from '@react-jvectormap/world'\n\n\nfunction ProductionMap({onClick,mapData}) {\n    const [mapMessage, setMapMessage] = useState(null);\n    const [helpMessage, setHelpMessage] = useState(null);\n\n    useEffect(()=> {\n        if (helpMessage === null){\n            let countryNum = Object.keys(mapData).length\n\n            if (countryNum === 0){\n                setMapMessage(\"While this map is empty, I assume you've been outside.\")\n                setHelpMessage(\"(How was touching grass?)\")\n            } else if (countryNum === 1){\n                setMapMessage(\"Others might call you a domestic movie watcher.\")\n                setHelpMessage(\"(Hover over the darkened country to see where your films were produced.)\")\n            } else if (countryNum < 10){\n                setMapMessage(\"Others might call you a bonafide globe trotter.\")\n                setHelpMessage(\"(Hover to see where your films were produced.)\")\n            } else {\n                setMapMessage(\"Others might call you a cinematic jet-setter.\")\n                setHelpMessage(\"(Hover to see where your (diverse) films were produced.)\")\n            }\n            //console.log(mapData); \n        }\n    });\n\n    return (\n        \n        <div className=\"App\">\n            <div className='background'>\n            <div className = \"practice-map\">\n\n                    <div className = \"map-header\">\n                        <div className = \"rem-padding\">\n                            <header className = 'map-title' > {mapMessage} </header>\n                            <p className = 'abed-nadir'> {helpMessage} </p>\n                        </div>\n                        <button type=\"button\" class=\"btn btn-outline-light\" href = '../css/FilmsWatched.css' onClick = {onClick}> Next </button>\n                    </div>\n                \n                    \n                <VectorMap className = \"map-hack\"\n                    map= {worldMill}\n                    backgroundColor='transparent'\n                    zoomOnScroll={false}\n                    containerStyle={{\n                    width: '40%',\n                    height: '40%'\n                    }}\n                    containerClassName=\"map\"\n                    regionStyle={{\n                    initial: {\n                        fill: \"#e4e4e4\",\n                        \"fill-opacity\": 0.9,\n                        stroke: \"none\",\n                        \"stroke-width\": 0,\n                        \"stroke-opacity\": 0\n                    },\n                    hover: {\n                        \"fill-opacity\": 0.8,\n                        cursor: \"pointer\"\n                    },\n                    selected: {\n                        fill: \"#2938bc\" //color for the clicked country\n                    },\n                    selectedHover: {}\n                    }}\n                    regionsSelectable={false}\n                    series={{\n                    regions: [\n                        {\n                        values: mapData, //this is your data\n                        scale: [\"#4d9e41\", \"#9e4169\"], //your color game's here\n                        normalizeFunction: \"polynomial\"\n                        }\n                    ]\n                    }}\n                />\n                \n                </div>\n            \n        </div>\n        </div>\n      );\n    \n  }\n\nexport default ProductionMap; // \"export default\" keywords specify the main component of the file","import '../css/FilmsWatched.css';\nimport '../css/App.css';\nimport React from 'react';\n\nfunction Error({errorMessage, onClick}) {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p className='App-body'> {`${errorMessage}`} </p>\n          <button type=\"button\" class=\"btn btn-outline-light\" onClick = {onClick}> Return </button>\n        </header>\n      </div>\n    );\n  }\n\nexport default Error; // \"export default\" keywords specify the main component of the file","import '../css/Component.css';\nimport '../css/App.css';\nimport '../css/Animations.css';\nimport React from 'react';\nimport { useEffect } from 'react';\n\nfunction MovieNumber({title, image_slug, rating, lb_url}) {\n    const url = \"https://image.tmdb.org/t/p/w1280\" + image_slug\n    const altText = \"Film poster of \" + title\n\n    let stars = \"\"\n\n    for (let i=0; i<parseInt(rating);i++){\n      stars += \"★\";\n    }\n\n    if (rating%1 !== 0){\n      stars += \" 1/2\"\n    }\n\n    useEffect(()=> { \n\n    });\n\n    // add into image \n    // data-tooltip-id=\"my-tooltip-pink\" data-tooltip-content=\"Hello world!\"\n    // add below img \n    // <Tooltip id=\"my-tooltip-pink\" className=\"example-pink\" />\n\n    return (\n      <div className=\"App\">\n        <div className= 'fade-in-animation'>\n        <div className = 'alignment-box'>\n          <a href={lb_url} target=\"_blank\" rel=\"noopener noreferrer\">\n            <img className = 'poster' \n                    src={url}\n                    alt={altText}\n                />\n          </a> \n        </div>\n        <p className = 'caption' > Your Rating: {stars}</p>\n        </div>\n      </div>\n    );\n  }\n\nexport default MovieNumber; // \"export default\" keywords specify the main component of the file","import '../css/FilmsWatched.css';\nimport '../css/App.css';\nimport '../css/Animations.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport MovieNumber from '../components/MovieNumber';\n\n\nfunction FavoriteMovies({onClick,filmDataObj, setTopMovies}) {\n    const [pageState, setPageState] = useState(\"loading\");\n    const [canLoad, setCanLoad] = useState(true)\n\n    useEffect(()=> {\n        if (pageState === \"loading\"){\n            filmDataObj = filmDataObj.sort((a,b) => parseFloat(b.Rating) - parseFloat(a.Rating));\n            //console.log(filmDataObj)\n            if (filmDataObj.length < 5){\n                setTopMovies(\"N/A\")\n                setCanLoad(false);\n            } else {\n                setTopMovies(filmDataObj)\n            }\n            setPageState(\"done\")\n        }\n    });\n\n    if (pageState === \"loading\"){\n        return (\n            <div className=\"App\">\n                <header className=\"App-header-2\">\n                    <div className= 'fade-in-animation'>\n                        <h1 className='favorite-movies-title'> All that being said, these were your favorites of {(new Date()).getFullYear()}. </h1>\n                    </div>\n                </header>\n            </div>\n        );\n    } else if (!canLoad){\n        return (\n            <div className=\"App\">\n                <header className=\"App-header-2\">\n                    <div className= 'fade-in-animation'>\n                        <h1 className='favorite-movies-title'> All that being said, I'm begging you to watch something. Anything! </h1>\n                        <button type=\"button\" class=\"btn btn-outline-light\" href = '../css/FilmsWatched.css' onClick = {onClick}> Next </button>\n                    </div>\n                </header>\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header-2\">\n                    <div className= 'fade-in-animation'>\n                        <h1 className='favorite-movies-title'> All that being said, these were your favorites of {(new Date()).getFullYear()}. </h1>\n                        <div className = \"top-five\" >\n                            <MovieNumber title = {filmDataObj[0].Name}\n                                        image_slug={filmDataObj[0].PosterPath} \n                                        rating = {filmDataObj[0].Rating}\n                                        lb_url = {filmDataObj[0]['Letterboxd URI']}\n                                        />\n                            <MovieNumber title = {filmDataObj[1].Name}\n                                        image_slug={filmDataObj[1].PosterPath}\n                                        rating = {filmDataObj[1].Rating}\n                                        lb_url = {filmDataObj[1]['Letterboxd URI']}\n                                        />\n                            <MovieNumber title = {filmDataObj[2].Name}\n                                        image_slug={filmDataObj[2].PosterPath} \n                                        rating = {filmDataObj[2].Rating}\n                                        lb_url = {filmDataObj[2]['Letterboxd URI']}\n                                        />\n                            <MovieNumber title = {filmDataObj[3].Name}\n                                        image_slug={filmDataObj[3].PosterPath}\n                                        rating = {filmDataObj[3].Rating} \n                                        lb_url = {filmDataObj[3]['Letterboxd URI']}\n                                        />\n                            <MovieNumber title = {filmDataObj[4].Name}\n                                        image_slug={filmDataObj[4].PosterPath} \n                                        rating = {filmDataObj[4].Rating}\n                                        lb_url = {filmDataObj[4]['Letterboxd URI']}\n                                        />\n                        </div>\n                        <button type=\"button\" class=\"btn btn-outline-light\" href = '../css/FilmsWatched.css' onClick = {onClick}> Next </button>\n                    </div>\n                </header>\n            </div>\n        );\n    }\n} \n    \n  \n\nexport default FavoriteMovies; // \"export default\" keywords specify the main component of the file","import '../css/FilmsWatched.css';\nimport '../css/App.css';\nimport '../css/Animations.css';\nimport React from 'react';\n\n\nfunction AboutMe({onClick}) {\n\n    const url = \"https://github.com/miriam-alex/letterboxd-wrapped\"\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        <div className= 'fade-in-animation'>\n              <p> About </p>\n              <div className='about-me-paragraph'>\n              <p>\n                  Letterboxd Wrapped provides users yearly statistics on their usage of the website, Letterboxd, via\n              access to the TMDB API. This was created by Miriam Alex. \n              To view the source code, click <a href={url} target=\"_blank\" rel=\"noopener noreferrer\"> here</a>. \n              To see what she is up to, visit her <a href=\"https://twitter.com/miriamcore_\" target=\"_blank\" rel=\"noopener noreferrer\"> Twitter account</a>. Have a lovely day.\n              </p>\n              </div>\n          <button type=\"button\" class=\"btn btn-outline-light\" onClick = {onClick}> Back </button>\n          </div>\n        </header>\n      </div>\n    );\n  \n    \n  }\n\nexport default AboutMe; // \"export default\" keywords specify the main component of the file","import '../css/Infographic.css';\nimport '../css/App.css';\nimport React from 'react';\n\nfunction Infographic({topMovies, minutesData, genreData, color}) {\n    //console.log(topMovies)\n    //console.log(genreData)\n\n    //{minutesData.toLocaleString(\"en-US\")}\n    //{genreData[0][0]}\n\n    console.log(\"info\")\n    console.log(color);\n    const url = \"https://image.tmdb.org/t/p/w1280\" + topMovies[0].PosterPath\n\n    if (topMovies.length >= 5){\n        return (\n            <div className=\"bg\" style={{background: `${color}`}}>\n                <h1 className = \"wrapped-title\" > Letterboxd Wrapped </h1>\n                <div class=\"rectangle\"></div>\n                <img className = 'poster2' \n                            src={url}\n                            alt={topMovies[0].Name}\n                        />\n                <div className = \"col2\">\n                    <div className = 'top-movies'>\n                        <h2 className = 'big-header'> Top Movies</h2>\n                        <div className = 'movie-items' >\n                            <p>1. {topMovies[0].Name} ({topMovies[0].Year})</p>\n                            <p>2. {topMovies[1].Name} ({topMovies[1].Year})</p>\n                            <p>3. {topMovies[2].Name} ({topMovies[2].Year})</p>\n                            <p>4. {topMovies[3].Name} ({topMovies[3].Year})</p>\n                            <p>5. {topMovies[4].Name} ({topMovies[4].Year})</p>\n                        </div>\n                    </div>\n    \n                    <div className = 'flex'>\n                        <div className = 'minutes'>\n                            <p className = 'header'> Minutes</p>\n                            <p className = 'item '> {minutesData.toLocaleString(\"en-US\")} </p>\n                        </div>\n    \n                        <div className = 'top-genre'>\n                            <p className = 'header'> Top Genre </p>\n                            <p className = 'item '>{genreData[0][0]} </p>\n                        </div>\n                    </div>\n                </div>\n                <p className = \"footer \"> miriam-alex.github.io/letterboxd-wrapped/</p>\n    \n            </div>\n        );\n    }\n  }\n\nexport default Infographic; // \"export default\" keywords specify the main component of the file","import '../css/FilmsWatched.css';\nimport '../css/App.css';\nimport '../css/Animations.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport Infographic from '../components/Infographic';\nimport html2canvas from 'html2canvas';\n\n\nfunction Final({onClick,topMovies, minutesData, genreData}) {\n    const [canDisplay, setCanDisplay] = useState(true);\n    const printRef = React.useRef();\n    const [bgColor, setBgColor] = useState(\"#9D5A5A\"); \n\n    useEffect(()=> {\n      if (canDisplay === true && topMovies.length <5){\n        setCanDisplay(false)\n      } \n    });\n\n    const handleDownloadImage = async () => {\n      const element = printRef.current;\n      const canvas = await html2canvas(element, {\n                                        allowTaint: true, \n                                        useCORS: true,\n                                        scale: 5\n                                      });\n  \n      const data = canvas.toDataURL('image/png');\n      const link = document.createElement('a');\n  \n      if (typeof link.download === 'string') {\n        link.href = data;\n        link.download = 'image.png';\n  \n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      } else {\n        window.open(data);\n      }\n    };\n\n    const changeColor = () => {\n      let colorCode = Math.floor(Math.random()*16777215).toString(16)\n      setBgColor(\"#\"+colorCode);\n    }\n\n    if (canDisplay === false) {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header-3\">\n            <div className= 'fade-in-animation'>\n              <p> Thanks for playing. <br/> Log more movies to generate a sick infographic! </p>\n              <button type=\"button\" class=\"btn btn-outline-light\" onClick = {onClick}> Home </button>\n            </div>\n          </header>\n        </div>\n        );\n    } else {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header-3\">\n            <div className= 'fade-in-animation'>\n              <div className = 'final-col-1' onClick={changeColor}>\n                <div ref={printRef}>\n                  <Infographic \n                              className = \"infographic\"\n                              topMovies = {topMovies}\n                              minutesData = {minutesData} \n                              genreData = {genreData}\n                              color = {bgColor}\n                  />\n                </div>\n              </div>\n              <div className = 'final-col-2'>\n                <p className = \"info-caption\" > And that's your year in film. \n                </p>\n              </div>\n            </div>\n            <button type=\"button\" className = \"info-button-2\" onClick={handleDownloadImage}> (To commemorate, download this here.) </button>\n            <button type=\"button\" class=\"btn btn-outline-light\" onClick = {onClick}> Home </button>\n          </header>\n        </div>\n        );\n    }\n  }\n\nexport default Final; // \"export default\" keywords specify the main component of the file","import React from 'react';\nimport { useState } from 'react';\n\n// pages\nimport Home from './pages/Home';\nimport Directions from './pages/Directions';\nimport FilmsWatched from './pages/FilmsWatched';\nimport MinutesWatched from './pages/MinutesWatched';\nimport TopGenres from './pages/TopGenres';\nimport ProductionMap from './pages/ProductionMap';\nimport Error from './components/Error';\nimport FavoriteMovies from './pages/FavoriteMovies';\nimport AboutMe from './pages/AboutMe';\nimport Final from './pages/Final';\n\nfunction App() {\n  // note: a state variable’s value never changes within a render. be careful.\n  // remember to avoid direct mutations to object -> replace them w new ones so the frame rerenders\n  // TREAT STATE AS IMMUTABLE!\n  \n  const [pageIndex, setPageIndex] = useState(0);\n  const [filmDataObj, setFilmDataObj] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [minutesData, setMinutesData] = useState(null)\n  const [genreData, setGenreData] = useState(null)\n  const [mapData, setMapData] = useState(null)\n  const [topMovies, setTopMovies] = useState(null)\n\n\n  if (pageIndex === -1){\n    return (\n      <AboutMe onClick={() => setPageIndex(0)}/>\n    );\n  } else if (pageIndex === 0){\n    return (\n      <Home className = 'Page-Animation' \n            onClick={() => setPageIndex(1)}\n            onClickInfo={() => setPageIndex(-1)}               \n      />\n    );\n  } else if (pageIndex === 1){\n    return (\n      <Directions className = 'Page-Animation'\n                  setPageIndex={setPageIndex}\n                  setFilmDataObj={setFilmDataObj} \n                  setErrorMessage={setErrorMessage}\n                  setMinutesData={setMinutesData}\n                  setGenreData={setGenreData}\n                  setMapData={setMapData}\n                  />\n    );\n  } else if (pageIndex === 2){\n    return (\n      <FilmsWatched onClick={() => setPageIndex(3)}\n              filmDataObj = {filmDataObj}\n      />\n    );\n  } else if (pageIndex === 3){\n    return (\n      <MinutesWatched onClick={() => setPageIndex(4)}\n              minutesData={minutesData}\n      />\n    );\n  } else if (pageIndex === 4){\n    return (\n      <TopGenres onClick={() => setPageIndex(5)}\n              genreData = {genreData}\n      />\n    );\n  } else if (pageIndex === 5){\n    return (\n      <ProductionMap onClick={() => setPageIndex(6)}\n                     mapData = {mapData}\n      />\n    );\n  } else if (pageIndex === 6){\n    return (\n      <FavoriteMovies onClick={() => setPageIndex(7)}\n              filmDataObj = {filmDataObj}\n              setTopMovies = {setTopMovies}\n      />\n    );\n  } else if (pageIndex === 7){\n    return (\n      <Final onClick={() => setPageIndex(0)}\n              topMovies = {topMovies}\n              minutesData = {minutesData}\n              genreData = {genreData}\n      />\n    );\n  } else if (pageIndex === 'error'){\n    return (\n      <Error errorMessage = {errorMessage} \n              onClick = {() => setPageIndex(0)} />\n    );\n  }\n}\n\nexport default App; // \"export default\" keywords specify the main component of the file","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}